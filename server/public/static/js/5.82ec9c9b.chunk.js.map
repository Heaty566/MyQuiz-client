{"version":3,"sources":["containers/takeQuiz/TakeQuiz.scene.tsx","containers/takeQuiz/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["TakeQuizScene","quiz","currentQuestion","handleOnChangeQuestion","correctAnswer","handleSelectAnswer","currentSelect","questionCounter","className","name","onClick","questions","length","question","answers","map","item","index","isCorrect","includes","isSelect","key","TakeQuiz","params","useParams","quizState","useSelector","quizSelector","useState","setCurrentQuestion","setCorrectAnswer","setCurrentSelect","setQuiz","useEffect","newShuffle","sort","Math","random","tracker","newAnswer","newCorrectAnswer","correct","indexOf","store","dispatch","getQuizById","quizId","type","newSelect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","from","test","_arrayLikeToArray","len","arr2","_defineProperty","obj","defineProperty","enumerable","configurable","writable","_toConsumableArray","arrayLikeToArray","iter","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"mappings":"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","file":"static/js/5.82ec9c9b.chunk.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport { Quiz } from \"../../reducers/quiz.reducer\";\r\n\r\nexport interface TakeQuizSceneProps {\r\n        quiz: Quiz;\r\n        currentQuestion: number;\r\n        handleOnChangeQuestion: Function;\r\n        correctAnswer: number[];\r\n        currentSelect: number[];\r\n        handleSelectAnswer: Function;\r\n}\r\n\r\nconst TakeQuizScene: FunctionComponent<TakeQuizSceneProps> = ({\r\n        quiz,\r\n        currentQuestion = 0,\r\n        handleOnChangeQuestion,\r\n        correctAnswer,\r\n        handleSelectAnswer,\r\n        currentSelect,\r\n}) => {\r\n        const questionCounter = currentQuestion + 1;\r\n\r\n        return (\r\n                <div className=\"take-quiz\">\r\n                        <div className=\"take-quiz__header\">\r\n                                <h2 className=\"take-quiz__title\">{quiz.name}</h2>\r\n                                <div className=\"take-quiz__header-right\">\r\n                                        {/* <p className=\"take-quiz__timer\">{convertTime(quiz.time)}</p> */}\r\n                                        <button\r\n                                                className=\"btn btn__link\"\r\n                                                onClick={() => handleOnChangeQuestion(currentQuestion - 1)}\r\n                                        >\r\n                                                Back\r\n                                        </button>\r\n                                        <button\r\n                                                className=\"btn btn__link\"\r\n                                                onClick={() => handleOnChangeQuestion(currentQuestion + 1)}\r\n                                        >\r\n                                                Next\r\n                                        </button>\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"take-quiz__body\">\r\n                                <div className=\"take-quiz__question\">\r\n                                        <p>{`${questionCounter} / ${quiz.questions.length} ---  please choose ${correctAnswer.length}`}</p>\r\n                                        <h3>{quiz.questions[currentQuestion].question}</h3>\r\n                                </div>\r\n                                <div className=\"take-quiz__answer\">\r\n                                        {quiz.questions[currentQuestion].answers.map((item, index) => {\r\n                                                const isCorrect = correctAnswer.includes(index);\r\n                                                const isSelect = currentSelect.includes(index);\r\n\r\n                                                const className =\r\n                                                        \"take-quiz__btn\" +\r\n                                                        (isSelect && isCorrect\r\n                                                                ? \" take-quiz__btn--correct\"\r\n                                                                : !isCorrect && isSelect\r\n                                                                ? \" take-quiz__btn--wrong\"\r\n                                                                : \"\");\r\n\r\n                                                return (\r\n                                                        <button\r\n                                                                className={className}\r\n                                                                key={index}\r\n                                                                onClick={() => handleSelectAnswer(index)}\r\n                                                        >\r\n                                                                {item}\r\n                                                        </button>\r\n                                                );\r\n                                        })}\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"take-quiz__footer\"></div>\r\n                </div>\r\n        );\r\n};\r\n\r\nexport default TakeQuizScene;\r\n","import React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport TakeQuizScene from \"./TakeQuiz.scene\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { quizSelector, Quiz } from \"../../reducers/quiz.reducer\";\r\nimport { getQuizById } from \"../../actions/quiz.action\";\r\nimport { store } from \"../../reducers\";\r\nimport \"../../styles/pages/_take-quiz.scss\";\r\n\r\nexport interface TakeQuizProps {}\r\n\r\nconst TakeQuiz: FunctionComponent<TakeQuizProps> = () => {\r\n        const params = useParams<{ quizId: string }>();\r\n        const quizState = useSelector(quizSelector);\r\n        const [currentQuestion, setCurrentQuestion] = useState(0);\r\n        const [correctAnswer, setCorrectAnswer] = useState<number[]>([]);\r\n        const [currentSelect, setCurrentSelect] = useState<number[]>([]);\r\n        const [quiz, setQuiz] = useState<Quiz>(quizState.quiz);\r\n\r\n        useEffect(() => {\r\n                const newShuffle = {\r\n                        ...quizState.quiz,\r\n                        questions: [...quizState.quiz.questions]\r\n                                .sort(() => Math.random() - 0.5)\r\n                                .map((item) => {\r\n                                        const tracker = item.correctAnswer.map((correctAnswer) => {\r\n                                                return item.answers[correctAnswer];\r\n                                        });\r\n\r\n                                        const newAnswer = [...item.answers].sort(() => Math.random() - 0.5);\r\n                                        const newCorrectAnswer = tracker.map((correct) => {\r\n                                                return newAnswer.indexOf(correct);\r\n                                        });\r\n\r\n                                        return {\r\n                                                ...item,\r\n                                                answers: newAnswer,\r\n                                                correctAnswer: newCorrectAnswer,\r\n                                        };\r\n                                }),\r\n                };\r\n                setQuiz(newShuffle);\r\n        }, [quizState.quiz]);\r\n\r\n        useEffect(() => {\r\n                store.dispatch(getQuizById({ quizId: params.quizId, type: \"learn\" }));\r\n        }, [params]);\r\n\r\n        useEffect(() => {\r\n                setCorrectAnswer(quiz.questions[currentQuestion].correctAnswer);\r\n        }, [currentQuestion, quiz]);\r\n\r\n        const handleOnChangeCurrentPage = (index: number) => {\r\n                if (index >= 0 && index <= quizState.quiz.questions.length - 1) {\r\n                        setCurrentQuestion(index);\r\n                }\r\n        };\r\n\r\n        useEffect(() => {\r\n                setCurrentSelect([]);\r\n        }, [currentQuestion]);\r\n\r\n        const handleOnSelectCorrect = (index: number) => {\r\n                const newSelect = [...currentSelect, index];\r\n                setCurrentSelect(newSelect);\r\n        };\r\n\r\n        return (\r\n                <TakeQuizScene\r\n                        quiz={quiz}\r\n                        currentQuestion={currentQuestion}\r\n                        correctAnswer={correctAnswer}\r\n                        handleOnChangeQuestion={handleOnChangeCurrentPage}\r\n                        handleSelectAnswer={handleOnSelectCorrect}\r\n                        currentSelect={currentSelect}\r\n                />\r\n        );\r\n};\r\n\r\nexport default TakeQuiz;\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}