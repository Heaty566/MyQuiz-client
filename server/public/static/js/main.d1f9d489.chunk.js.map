{"version":3,"sources":["services/http.ts","reducers/user.reducer.ts","reducers/index.ts","actions/user.action.ts","actions/quiz.action.ts","reducers/api.reducer.ts","reducers/quiz.reducer.ts","components/common/LoadingSpinner.tsx","components/common/Spinner.tsx","components/common/LoadingPage.tsx","components/routers/ProtectedRouter.tsx","components/routers/ProtectedAuthRouter.tsx","App.tsx","index.tsx"],"names":["axios","defaults","baseURL","process","withCredentials","http","get","post","put","delete","userReducer","createSlice","name","initialState","isLogin","fullName","isTeacher","avatarUrl","reducers","logoutUser","state","type","Cookies","remove","extraReducers","builder","addCase","getUser","fulfilled","payload","updateUser","userAction","actions","selectUser","auth","entities","combineReducers","quiz","quizReducer","reducer","api","requestReducer","store","configureStore","createAsyncThunk","_","thunkAPI","a","rejectWithValue","res","data","input","dispatch","apiAction","newApiCall","then","updateReponse","message","response","statusText","updateError","error","meesage","apiResponse","createNewQuiz","searchQuiz","getQuizById","quizId","isLoading","isError","errors","refreshApi","changeType","apiSelector","searchQuizzes","questions","question","answers","correctAnswer","userId","time","user","avatar","quizSelector","SpinnerContainer","styled","div","LoadingSpinner","height","width","RotateAnimation","keyframes","Spinner","svg","SpinnerIcon","viewBox","fill","d","Container","LoadingPage","className","ProtectedRouter","Component","props","userState","useSelector","history","useHistory","useEffect","push","ProtectedAuthRouter","Footer","React","lazy","Profile","Login","Home","Navbar","CreateNewQuiz","TakeQuiz","TakeExam","SearchQuiz","App","location","useLocation","window","scrollTo","pathname","fallback","path","component","exact","to","from","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1f9d489.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_URL;\r\naxios.defaults.withCredentials = true;\r\n\r\nexport const http = {\r\n        get: axios.get,\r\n        post: axios.post,\r\n        put: axios.put,\r\n        delete: axios.delete,\r\n};\r\n","import { createSlice, ActionReducerMapBuilder } from \"@reduxjs/toolkit\";\r\nimport Cookies from \"js-cookie\";\r\nimport { getUser, updateUser } from \"../actions/user.action\";\r\nimport { UserInfo } from \"../actions/user.action\";\r\nimport { RootState } from \".\";\r\n\r\nexport interface UserState extends UserInfo {\r\n        isLogin: boolean;\r\n}\r\n\r\nconst initialState: UserState = {\r\n        isLogin: false,\r\n        fullName: \"\",\r\n        isTeacher: false,\r\n        avatarUrl: \"\",\r\n};\r\n\r\nconst userReducer = createSlice({\r\n        name: \"User\",\r\n        initialState,\r\n        reducers: {\r\n                logoutUser(state, { type }) {\r\n                        state.fullName = \"\";\r\n                        state.isLogin = false;\r\n                        Cookies.remove(\"token\");\r\n                },\r\n        },\r\n        extraReducers: (builder: ActionReducerMapBuilder<UserState>) => {\r\n                builder.addCase(getUser.fulfilled, (state, { payload }) => {\r\n                        const { fullName, isTeacher, avatarUrl } = payload;\r\n                        state.fullName = fullName;\r\n                        state.isTeacher = isTeacher;\r\n                        state.isLogin = true;\r\n                        state.avatarUrl = avatarUrl;\r\n                });\r\n                builder.addCase(updateUser.fulfilled, (state, { payload }) => {\r\n                        const { fullName, isTeacher } = payload;\r\n                        state.fullName = fullName;\r\n                        state.isTeacher = isTeacher;\r\n                });\r\n        },\r\n});\r\n\r\nconst { logoutUser } = userReducer.actions;\r\n\r\nexport const userAction = { logoutUser };\r\nexport default userReducer.reducer;\r\n\r\nexport const selectUser = (state: RootState) => state.auth;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport userReducer from \"./user.reducer\";\r\nimport requestReducer from \"./api.reducer\";\r\nimport quizReducer from \"./quiz.reducer\";\r\n\r\nconst entities = combineReducers({\r\n        quiz: quizReducer,\r\n});\r\n\r\nconst reducer = combineReducers({\r\n        auth: userReducer,\r\n        api: requestReducer,\r\n        entities,\r\n});\r\n\r\nexport const store = configureStore({\r\n        reducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof reducer>;\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { apiAction } from \"../reducers/api.reducer\";\r\nimport { http } from \"../services/http\";\r\n\r\nexport interface UserInfo {\r\n        fullName: string;\r\n        isTeacher: boolean;\r\n        avatarUrl: string;\r\n}\r\n\r\nexport interface UpdateUser {\r\n        fullName: string;\r\n        isTeacher: boolean;\r\n}\r\n\r\nexport const getUser = createAsyncThunk<UserInfo, {}, {}>(\"user\", async (_, thunkAPI) => {\r\n        const { rejectWithValue } = thunkAPI;\r\n        try {\r\n                const res = await http.get(\"/user\");\r\n                return res.data.data;\r\n        } catch (err) {\r\n                // Cookies.remove(\"token\");\r\n                return rejectWithValue({});\r\n        }\r\n});\r\n\r\nexport const updateUser = createAsyncThunk<UserInfo, { input: UpdateUser }, {}>(\r\n        \"updateUser\",\r\n        async ({ input }, thunkAPI) => {\r\n                const { dispatch, rejectWithValue } = thunkAPI;\r\n                dispatch({ type: apiAction.newApiCall.type });\r\n\r\n                return await http\r\n                        .put(\"/user/profile\", input)\r\n                        .then(({ data }) => {\r\n                                dispatch({\r\n                                        type: apiAction.updateReponse.type,\r\n                                        payload: { message: data.message },\r\n                                });\r\n                                return data.data;\r\n                        })\r\n                        .catch(({ response }) => {\r\n                                const { data, statusText } = response;\r\n                                dispatch({\r\n                                        type: apiAction.updateError.type,\r\n                                        payload: { error: data, meesage: statusText },\r\n                                });\r\n                                return rejectWithValue({});\r\n                        })\r\n                        .finally(() => {\r\n                                dispatch({ type: apiAction.apiResponse.type });\r\n                        });\r\n        }\r\n);\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { apiAction } from \"../reducers/api.reducer\";\r\nimport { http } from \"../services/http\";\r\nimport { SearchQuizItem, Quiz } from \"../reducers/quiz.reducer\";\r\n\r\nexport interface QuestionDto {\r\n        question: string;\r\n        correctAnswer: number[];\r\n        answers: string[];\r\n}\r\n\r\nexport interface CreateNewQuizDto {\r\n        name: string;\r\n        time: number;\r\n        questions: QuestionDto[];\r\n}\r\n\r\nexport const createNewQuiz = createAsyncThunk<any, { input: CreateNewQuizDto }, {}>(\r\n        \"createNewQuiz\",\r\n        async ({ input }, thunkAPI) => {\r\n                const { dispatch, rejectWithValue } = thunkAPI;\r\n                dispatch({ type: apiAction.newApiCall.type });\r\n\r\n                return await http\r\n                        .post(\"/quiz\", input)\r\n                        .then(({ data }) => {\r\n                                dispatch({\r\n                                        type: apiAction.updateReponse.type,\r\n                                        payload: { message: \"Quiz added\" },\r\n                                });\r\n\r\n                                return data.data;\r\n                        })\r\n                        .catch(({ response }) => {\r\n                                const { data } = response;\r\n\r\n                                dispatch({\r\n                                        type: apiAction.updateError.type,\r\n                                        payload: {\r\n                                                error: data,\r\n                                                message:\r\n                                                        \"Please check your form, something goes wrong ( We will add more details about error form in the next version, sorry for inconvenience )\",\r\n                                        },\r\n                                });\r\n                                return rejectWithValue({});\r\n                        })\r\n                        .finally(() => {\r\n                                dispatch({ type: apiAction.apiResponse.type });\r\n                        });\r\n        }\r\n);\r\n\r\nexport const searchQuiz = createAsyncThunk<SearchQuizItem[], { input: string }, {}>(\r\n        \"searchQuiz\",\r\n        async ({ input }, thunkAPI) => {\r\n                const { dispatch } = thunkAPI;\r\n                dispatch({ type: apiAction.newApiCall.type });\r\n\r\n                return await http\r\n                        .get(`/quiz/search/${input}`)\r\n                        .then(({ data }) => {\r\n                                return data;\r\n                        })\r\n                        .finally(() => {\r\n                                dispatch({ type: apiAction.apiResponse.type });\r\n                        });\r\n        }\r\n);\r\n\r\nexport const getQuizById = createAsyncThunk<Quiz, { quizId: string; type: \"learn\" | \"exam\" }>(\r\n        \"getQuizById\",\r\n        async ({ quizId, type }, thunkAPI) => {\r\n                const { dispatch } = thunkAPI;\r\n                dispatch({ type: apiAction.newApiCall.type });\r\n\r\n                return await http\r\n                        .get(`/quiz/${quizId}/${type}`)\r\n                        .then(({ data }) => {\r\n                                return data;\r\n                        })\r\n                        .finally(() => {\r\n                                dispatch({ type: apiAction.apiResponse.type });\r\n                        });\r\n        }\r\n);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \".\";\r\n\r\nexport interface ServerSponse {\r\n        message: string;\r\n        statusCode: number;\r\n        error: any;\r\n}\r\nexport interface JoiError {\r\n        [path: string]: string;\r\n}\r\n\r\nexport interface RequestState {\r\n        isError: boolean;\r\n        isLoading: boolean;\r\n        message: string;\r\n        errors?: JoiError;\r\n        type: string;\r\n}\r\n\r\nconst initialState: RequestState = {\r\n        isLoading: false,\r\n        isError: false,\r\n        message: \"\",\r\n        errors: {},\r\n        type: \"learn\",\r\n};\r\n\r\nconst requestReducer = createSlice({\r\n        name: \"RequestState\",\r\n        initialState,\r\n        reducers: {\r\n                refreshApi(state, _) {\r\n                        state.isError = false;\r\n                        state.isLoading = false;\r\n                        state.message = \"\";\r\n                        state.errors = {};\r\n                },\r\n\r\n                newApiCall(state, _) {\r\n                        state.isLoading = true;\r\n                        state.isError = false;\r\n                        state.message = \"\";\r\n                        state.errors = {};\r\n                },\r\n\r\n                changeType(state, { type, payload }) {\r\n                        state.type = payload.type;\r\n                },\r\n\r\n                updateReponse(state, { type, payload }) {\r\n                        state.message = payload.message;\r\n                },\r\n\r\n                updateError(state, { type, payload }: { type: string; payload: ServerSponse }) {\r\n                        const { error, message }: ServerSponse = payload;\r\n\r\n                        state.isError = true;\r\n                        state.message = message;\r\n                        state.errors = error;\r\n                },\r\n\r\n                apiResponse(state, _) {\r\n                        state.isLoading = false;\r\n                },\r\n        },\r\n});\r\nconst { apiResponse, newApiCall, updateError, updateReponse, refreshApi, changeType } = requestReducer.actions;\r\n\r\nexport const apiAction = { apiResponse, newApiCall, updateError, updateReponse, refreshApi, changeType };\r\nexport default requestReducer.reducer;\r\nexport const apiSelector = (state: RootState) => state.api;\r\n","import { createSlice, ActionReducerMapBuilder } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \".\";\r\nimport { searchQuiz, getQuizById } from \"../actions/quiz.action\";\r\n\r\nexport interface SearchQuizItem {\r\n        name: string;\r\n        time: number;\r\n        _id: string;\r\n        questions: number;\r\n}\r\nexport interface Question {\r\n        question: string;\r\n        answers: string[];\r\n        correctAnswer: number[];\r\n}\r\n\r\nexport interface Quiz {\r\n        name: string;\r\n        time: number;\r\n        userId: string;\r\n        user: { fullName: string; avatar: string };\r\n        questions: Question[];\r\n}\r\n\r\nexport interface QuizState {\r\n        searchQuizzes: SearchQuizItem[];\r\n        quiz: Quiz;\r\n}\r\n\r\nconst initialState: QuizState = {\r\n        searchQuizzes: [],\r\n        quiz: {\r\n                name: \"\",\r\n                questions: [{ question: \"\", answers: [], correctAnswer: [] }],\r\n                userId: \"\",\r\n                time: 0,\r\n                user: { avatar: \"\", fullName: \"\" },\r\n        },\r\n};\r\n\r\nconst quizReducer = createSlice({\r\n        name: \"Quiz\",\r\n        initialState,\r\n        reducers: {},\r\n        extraReducers: (builder: ActionReducerMapBuilder<QuizState>) => {\r\n                builder.addCase(getQuizById.fulfilled, (state, { payload }) => {\r\n                        state.quiz = payload;\r\n                });\r\n\r\n                builder.addCase(searchQuiz.fulfilled, (state, { payload }) => {\r\n                        state.searchQuizzes = payload;\r\n                });\r\n        },\r\n});\r\n// const {} = quizReducer.actions;\r\n\r\nexport const quizAction = {};\r\nexport default quizReducer.reducer;\r\nexport const quizSelector = (state: RootState) => state.entities.quiz;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst SpinnerContainer = styled.div`\r\n        width: \"100%\";\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 8px;\r\n`;\r\nexport interface LoadingSpinnerProps {}\r\n\r\nconst LoadingSpinner: React.SFC<LoadingSpinnerProps> = () => {\r\n        return (\r\n                <SpinnerContainer>\r\n                        <Spinner height=\"40\" width=\"40\" />\r\n                </SpinnerContainer>\r\n        );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import * as React from \"react\";\r\n\r\nimport styled, { keyframes } from \"styled-components\";\r\nconst RotateAnimation = keyframes`\r\n        0% {\r\n                transform: rotate(0deg);\r\n        }\r\n        100% {\r\n                transform: rotate(360deg);\r\n        }\r\n`;\r\n\r\nconst Spinner = styled.svg`\r\n        animation: ${RotateAnimation} 1s infinite linear;\r\n`;\r\n\r\nconst SpinnerIcon: React.FunctionComponent<{ height: string; width: string }> = ({ height = \"50\", width = \"50\" }) => {\r\n        return (\r\n                <Spinner width={width} height={height} viewBox={`0 0 24 24`} fill=\"none\">\r\n                        <path\r\n                                d=\"M24 12C24 14.5342 23.1977 17.0033 21.7082 19.0534C20.2187 21.1036 18.1183 22.6296 15.7082 23.4127C13.2981 24.1958 10.7019 24.1958 8.2918 23.4127C5.88167 22.6296 3.78133 21.1036 2.2918 19.0534C0.802259 17.0033 -2.21542e-07 14.5342 0 12C2.21543e-07 9.46585 0.80226 6.99675 2.2918 4.94658C3.78133 2.8964 5.88168 1.37042 8.2918 0.587321C10.7019 -0.195774 13.2981 -0.195774 15.7082 0.587322L14.9666 2.86986C13.0385 2.24338 10.9615 2.24338 9.03344 2.86986C7.10534 3.49633 5.42507 4.71712 4.23344 6.35726C3.04181 7.9974 2.4 9.97268 2.4 12C2.4 14.0273 3.04181 16.0026 4.23344 17.6427C5.42507 19.2829 7.10534 20.5037 9.03344 21.1301C10.9615 21.7566 13.0385 21.7566 14.9666 21.1301C16.8947 20.5037 18.5749 19.2829 19.7666 17.6427C20.9582 16.0026 21.6 14.0273 21.6 12H24Z\"\r\n                                fill=\"#2196F3\"\r\n                        />\r\n                </Spinner>\r\n        );\r\n};\r\n\r\nexport default SpinnerIcon;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n        min-height: 100vh;\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n`;\r\n\r\nexport interface LoadingPageProps {}\r\n\r\nconst LoadingPage: React.SFC<LoadingPageProps> = () => {\r\n        return (\r\n                <Container>\r\n                        <div className=\"page__loading\"></div>;\r\n                </Container>\r\n        );\r\n};\r\n\r\nexport default LoadingPage;\r\n","import React, { FunctionComponent, useEffect } from \"react\";\r\nimport { selectUser } from \"../../reducers/user.reducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport interface ProtectedRouterProps {\r\n        Component: FunctionComponent;\r\n        [name: string]: any;\r\n}\r\n\r\nconst ProtectedRouter: FunctionComponent<ProtectedRouterProps> = ({ Component, ...props }) => {\r\n        const userState = useSelector(selectUser);\r\n        const history = useHistory();\r\n\r\n        useEffect(() => {\r\n                if (!userState.isLogin) history.push(\"/user/login\");\r\n        }, [history, userState.isLogin]);\r\n\r\n        return <Component {...props} />;\r\n};\r\n\r\nexport default ProtectedRouter;\r\n","import React, { FunctionComponent, useEffect } from \"react\";\r\nimport { selectUser } from \"../../reducers/user.reducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport interface ProtectedRouterProps {\r\n        Component: FunctionComponent;\r\n        [name: string]: any;\r\n}\r\n\r\nconst ProtectedAuthRouter: FunctionComponent<ProtectedRouterProps> = ({ Component, ...props }) => {\r\n        const userState = useSelector(selectUser);\r\n        const history = useHistory();\r\n\r\n        useEffect(() => {\r\n                if (userState.isLogin) history.push(\"/home\");\r\n        }, [history, userState.isLogin]);\r\n\r\n        return <Component {...props} />;\r\n};\r\n\r\nexport default ProtectedAuthRouter;\r\n","import React, { Suspense, useEffect } from \"react\";\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\nimport \"./styles/main.scss\";\n\nimport LoadingSpinner from \"./components/common/LoadingSpinner\";\nimport LoadingPage from \"./components/common/LoadingPage\";\n// import PrivateRouter from \"./components/routers/PrivateRouter\";\nimport ProtectedRouter from \"./components/routers/ProtectedRouter\";\nimport ProtectAuthRouter from \"./components/routers/ProtectedAuthRouter\";\nimport { apiAction } from \"./reducers/api.reducer\";\nimport { store } from \"./reducers\";\n\nconst Footer = React.lazy(() => import(\"./containers/footer\"));\n\nconst Profile = React.lazy(() => import(\"./containers/profile\"));\nconst Login = React.lazy(() => import(\"./containers/login\"));\nconst Home = React.lazy(() => import(\"./containers/home\"));\nconst Navbar = React.lazy(() => import(\"./containers/navbar\"));\nconst CreateNewQuiz = React.lazy(() => import(\"./containers/createNewQuiz\"));\nconst TakeQuiz = React.lazy(() => import(\"./containers/takeQuiz\"));\nconst TakeExam = React.lazy(() => import(\"./containers/takeExam\"));\nconst SearchQuiz = React.lazy(() => import(\"./containers/searchQuiz\"));\nexport interface AppProps {}\n\nconst App: React.FunctionComponent<AppProps> = () => {\n        const location = useLocation();\n\n        useEffect(() => {\n                window.scrollTo(0, 0);\n                store.dispatch({ type: apiAction.refreshApi.type });\n        }, [location.pathname]);\n\n        return (\n                <div className=\"App typography\">\n                        <Suspense fallback={<LoadingPage />}>\n                                <Navbar />\n                                <main className=\"container\">\n                                        <Switch>\n                                                <Route path=\"/home\" component={Home} />\n                                                <ProtectAuthRouter path=\"/user/login\" Component={Login} />\n                                                <ProtectAuthRouter path=\"/user/register\" Component={Login} />\n                                                <ProtectedRouter path=\"/user/profile\" Component={Profile} />\n                                                <ProtectedRouter path=\"/quiz/new\" exact Component={CreateNewQuiz} />\n                                                <Route path=\"/quiz/search/:type/:name/:page\" component={SearchQuiz} />\n                                                <Redirect\n                                                        path=\"/quiz/search/:type/:name\"\n                                                        to=\"/quiz/search/learn/:name/1\"\n                                                />\n\n                                                <Route path=\"/quiz/:quizId/learn\" component={TakeQuiz} />\n                                                <Route path=\"/quiz/:quizId/exam\" component={TakeExam} />\n                                                <Redirect path=\"/quiz/:quizId\" to=\"/quiz/:quizId/exam\" />\n                                                <Redirect from=\"/\" to=\"/home\" />\n                                        </Switch>\n                                </main>\n                                <Suspense fallback={<LoadingSpinner />}>\n                                        <Footer />\n                                </Suspense>\n                        </Suspense>\n                </div>\n        );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./reducers\";\nimport { getUser } from \"./actions/user.action\";\nimport Cookies from \"js-cookie\";\nimport \"./services/http\";\n\nconst token = Cookies.get(\"token\");\n\nif (token) store.dispatch(getUser({}));\nReactDOM.render(\n        <React.StrictMode>\n                <BrowserRouter>\n                        <Provider store={store}>\n                                <App />\n                        </Provider>\n                </BrowserRouter>\n        </React.StrictMode>,\n        document.getElementById(\"root\")\n);\n"],"sourceRoot":""}